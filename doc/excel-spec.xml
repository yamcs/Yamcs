<appendix id="excel-spec"><title>Excel Spreadsheet for MDB Specification</title>

<para>
    Yamcs offers various ways of defining TM packets and parameters. The recommended way is to use a spreadsheet. This offers a good mixture between easy user manipulation and flexibility. This appendix explains the general and structural conventions that apply when defining a space system using Excel.
</para>

<sect1><title>Conventions</title>
	<orderedlist>
		<listitem>Every opsname will automatically be prepended with the 'opsname prefix' value from the 'General' sheet (if 'opsname prefix' is specified)</listitem>
		<listitem>The actual descriptive part of opsnames is WordCapitalized (eg. HK_WatchdogError)</listitem>
		<listitem>All numeric values can be entered as decimals or as hexadecimals (with prefix 0x)</listitem>
		<listitem>Although column names are used for reference below, columns must not be reordered.</listitem>
	</orderedlist>
	<para>A number of mandatory named sheets are described as part of this specification, though authors may add their own sheets and still use the spreadsheet file as the reference MDB.</para>
</sect1>

<sect1><title>General sheet</title>
	<para>This sheet must be named "General", and the columns described must not be reordered.</para>
	<variablelist><title>Columns</title>
		<varlistentry><term>format version</term>
			<listitem>Used by the loader to ensure a compatible spreadsheet structure. This document describes format version 2</listitem>
		</varlistentry>
		
		<varlistentry><term>name</term>
			<listitem>Name of the MDB</listitem>
		</varlistentry>
		
		<varlistentry><term>document version</term>
			<listitem>Used by the author to track versions in an arbitrary manner</listitem>
		</varlistentry>
		
		<varlistentry><term>opsname prefix</term>
			<listitem>Optional value which will automatically be prepended before every opsname, useful if all the parameters have a common system prefix</listitem>
		</varlistentry>
	</variablelist>
</sect1>

<sect1><title>MDB sheet</title>
	<para>This sheet is optional, but if present must be named "MDB". The columns described must not be reordered.</para>
	<variablelist><title>Columns</title>
		<varlistentry><term>version</term>
						<term>issue</term>
						<term>revision</term>
						<term>testversion</term>
			<listitem>Used for CDU version tracking</listitem>
		</varlistentry>
		
		<varlistentry><term>instance</term>
			<listitem>Organisation</listitem>
		</varlistentry>
		
		<varlistentry><term>systemtree</term>
			<listitem>Version of the system tree used</listitem>
		</varlistentry>
		
		<varlistentry><term>cupath</term>
			<listitem>Path in MDB</listitem>
		</varlistentry>
		
		<varlistentry><term>apid</term>
			<listitem>APID used for TCs</listitem>
		</varlistentry>
		
		<varlistentry><term>element_configuration</term>
			<listitem>Root system</listitem>
		</varlistentry>
		
		<varlistentry><term>mission</term>
						<term>CDU version</term>
						<term>CDU description</term>
			<listitem>Inserted into generated CDU</listitem>
		</varlistentry>
	</variablelist>
    
</sect1>

<sect1><title>Containers sheet</title>
	<para>This sheet must be named "Containers", and the columns described must not be reordered. The sheet contains packets information, including their measurements. General conventions:
		<itemizedlist>
			<listitem>first line with a new 'packets opsname' starts a new packet</listitem>
			<listitem>second line after a new 'packet opsname' should contain the first measurement</listitem>
			<listitem>empty lines are only allowed between two packets</listitem>
		</itemizedlist>
	</para>
	<variablelist><title>Columns</title>
		<varlistentry><term>container name</term>
			<listitem>The opsname of the packet</listitem>
		</varlistentry>
		
		<varlistentry><term>parent</term>
			<listitem>Parent container and position in bits where the subcontainer starts, for example  'PARENT_CONTAINER:64'. If position in bits is not specified, the default position is to start from the last parameter in the parent. If parent is not specified, either the container is the root, or it can be used as part of another container in aggregation.</listitem>
		</varlistentry>
		
		<varlistentry><term>condition</term>
			<listitem>Inheritance condition, usually specifies a switch within the parent which activates this child, for example 'MID=0x101'</listitem>
		</varlistentry>
		
		<varlistentry><term>flags</term>
			<listitem>Used to encode special cases. Flags are case-insensitive and can be concatenated together.
				<itemizedlist>
					<listitem><emphasis>I:</emphasis> ignore completely when generating the Oracle MDB. In Yamcs the parameter is NOT ignored.</listitem>
					<listitem><emphasis>D:</emphasis> derived value, in this case the measurement MAY NOT have calibration</listitem>
					<listitem><emphasis>L:</emphasis> little endian value</listitem>
				</itemizedlist>
			</listitem>
		</varlistentry>
		
		<varlistentry><term>parameter name</term>
			<listitem>The opsnames of the Parameters contained within this container, one per line after the line defining the opsname. Parameters are defined in the Parameters sheet. Note that the first parameter of a packet MAY NOT be on the same line as the packet opsname. Extension: for the SOLAR Instruments, this column has been extended to mean not only a measurement but also another packet in case the extension mechanism specified above is not enough.</listitem>
		</varlistentry>
		
		<varlistentry><term>relpos</term>
			<listitem>Relative position (offset) of a measurement to its predecessor. A relpos of 1 means no gap between two measurements. A relpos of 9 means a gap of one byte (i.e. 8 irrelevant bits).</listitem>
		</varlistentry>
		
		<varlistentry><term>size in bits</term>
			<listitem>The size of the container in bits. This is not usually needed but if the container is part of another container through aggregation, this size is used to determine the position of the next entry in the master container. See <xref linkend="container-agregation"/> for more details.</listitem>
		</varlistentry>
		
		<varlistentry><term>expected interval</term>
			<listitem>If the container is not updated in this interval, all the parameters from it are marked as expired</listitem>
		</varlistentry>
		
		<varlistentry><term>description</term>
			<listitem>Optional human readable text.</listitem>
		</varlistentry>
		
		<varlistentry><term>namespace:MDB:Pathname</term>
			<listitem>Optionally specify the MDB alias for the packet.</listitem>
		</varlistentry>
	</variablelist>
</sect1>


<sect1><title>Parameters sheet</title>
	<para>This sheet must be named "Parameters", and the columns described must not be reordered. The sheet contains measurements information (both for TM and RESP packets), excluding their calibration.</para>
    <section><title>Columns</title>
        <variablelist>
            <varlistentry><term>opsname</term>
                <listitem>The opsname of the measurements. Any entry starting with '#' is treated as a comment row.</listitem>
            </varlistentry>
            
            <varlistentry><term>bitlength</term>
                <listitem>Length of the measurement, in bits, not needed for terminatedstring raw types</listitem>
            </varlistentry>
            
            <varlistentry><term>raw type</term>
                <listitem>See <xref linkend="sheet-raw-types"></xref> for descriptions of the available raw types.</listitem>
            </varlistentry>
            
            <varlistentry><term>eng type</term>
                <listitem>See <xref linkend="sheet-eng-types"></xref> for descriptions of the available engineering types.</listitem>
            </varlistentry>
            
            <varlistentry><term>eng unit</term>
                <listitem><simplelist type="inline"><member>degC</member><member>W</member><member>V</member><member>A</member><member>s</member><member>us</member></simplelist></listitem>
            </varlistentry>
            
            <varlistentry><term>calibration</term>
                <listitem>Name of a calibration described in the Calibration sheet, leave empty if no calibration is applied</listitem>
            </varlistentry>
            
            <varlistentry><term>low warn limit</term>
                <listitem>The lower limit of the raw value range, or a fixed raw value (if the highlimit is not filled in)</listitem>
            </varlistentry>
            
            <varlistentry><term>high warn limit</term>
                <listitem>The upper limit of the raw value range</listitem>
            </varlistentry>
            
            <varlistentry><term>low danger limit</term>
                <listitem>The upper limit of the raw value range</listitem>
            </varlistentry>
            
            <varlistentry><term>high danger limit</term>
                <listitem>The upper limit of the raw value range</listitem>
            </varlistentry>
            
            <varlistentry><term>description</term>
                <listitem>Optional human readable text.</listitem>
            </varlistentry>
            
            <varlistentry><term>namespace:MDB:Pathname</term>
                <listitem>Optionally specify the MDB alias for the packet.</listitem>
            </varlistentry>
        </variablelist>
    </section>
    
    <section id="sheet-raw-types"><title>Raw types</title>
        <para>Raw types describe how the parameter is encoded in the raw packet. All types are case-insensitive.</para>
        <variablelist>
            <varlistentry><term>uint</term>
                <listitem>Unsigned integer, need to specify bit length.</listitem>
            </varlistentry>
            
            <varlistentry><term>float</term>
                <listitem>Floating point number, need to specify bit length</listitem>
            </varlistentry>
            
            <varlistentry><term>int</term>
                <listitem>Synonym for int(2s)</listitem>
            </varlistentry>
            
            <varlistentry><term>int(2s)</term>
                <listitem>Signed integer using 2's complement binary representation, need to specify bit length.</listitem>
            </varlistentry>
            
            <varlistentry><term>int(si)</term>
                <listitem>Signed integer using sign-magnitude binary representation, need to specify bit length.</listitem>
            </varlistentry>
            
            <varlistentry><term>boolean</term>
                <listitem>Boolean value of 1 bit. Value 1 is true and 0 is false. The bit length must not be defined as it is assumed to be 1</listitem>
            </varlistentry>
            
            <varlistentry><term>bytestream</term>
                <listitem>Catch-all for any binary data, need to specify bit length.</listitem>
            </varlistentry>
            
            <varlistentry><term>string</term>
                <listitem>Synonym for TerminatedString(0x0)</listitem>
            </varlistentry>
            
            <varlistentry><term>TerminatedString(0x0)</term>
                <listitem>A string terminated by the specified byte.</listitem>
            </varlistentry>
            
            <varlistentry><term>FixedString</term>
                <listitem>Fixed length string, specify size in bitlength</listitem>
            </varlistentry>
            
            <varlistentry><term>PrependedSizeString</term>
                <listitem>Has size specified in the leading byte of the value.</listitem>
            </varlistentry>
        </variablelist>
    </section>
    
    <section id="sheet-eng-types"><title>Engineering types</title>
        <para>Engineering types describe a parameter in its processed form (i.e. after any calibrations). All types are case-insensitive.</para>
        <variablelist>
            <varlistentry><term>uint</term>
                <listitem>
                    <para>Unsigned integer.</para>
                    <para>Automatic conversion when raw value is encoded as <code>uint</code> or <code>string</code>. For more advanced use cases, define and refer to a Calibrator in the Calibration sheet (see <xref linkend="sheet-calibration"></xref>).</para>
                </listitem>
            </varlistentry>
            
            <varlistentry><term>int</term>
                <listitem>
                    <para>Signed integer.</para>
                    <para>Automatic conversion when raw value is encoded as <code>int</code>, <code>uint</code> or <code>string</code>. For more advanced use cases, define and refer to a Calibrator in the Calibration sheet (see <xref linkend="sheet-calibration"></xref>).</para>
                </listitem>
            </varlistentry>
            
            <varlistentry><term>string</term>
                <listitem>
                    <para>String.</para>
                    <para>Automatic conversion when raw value is encoded as <code>string</code>.</para>
                </listitem>
            </varlistentry>
            
            <varlistentry><term>float</term>
                <listitem>
                    <para>Floating point number.</para>
                    <para>Automatic conversion when raw value is encoded as <code>float</code>, <code>int</code>, <code>uint</code> or <code>string</code>. For more advanced use cases, define and refer to a Calibrator in the Calibration sheet (see <xref linkend="sheet-calibration"></xref>).</para>
                </listitem>
            </varlistentry>
            
            <varlistentry><term>enumerated</term>
                <listitem>
                    <para>A kind of string that can only be one out of a fixed set of predefined state values. If the parameter's enumerated value is unknown, the state value <code>UNDEF</code> is used instead.</para>
                    <para>Automatic conversion when raw value is encoded as <code>int</code> or <code>uint</code>. A Calibrator is required. See <xref linkend="sheet-calibration"></xref>.</para>
                </listitem>
            </varlistentry>
            
            <varlistentry><term>boolean</term>
                <listitem>
                    <para>A binary true/false value.</para>
                    <para>Automatic conversion from any type of raw value. Anything that is equal to zero, all-zero bytes or an empty string converts to <code>false</code>, everything else converts to <code>true</code>.</para>
                </listitem>
            </varlistentry>
            
            <varlistentry><term>binary</term>
                <listitem>
                    <para>Catch-all for any binary data.</para>
                    <para>Automatic conversion from <code>bytestream</code> only.</para>
                </listitem>
            </varlistentry>
        </variablelist>
    </section>
</sect1>

<sect1 id="sheet-calibration"><title>Calibration sheet</title>
	<para>This sheet must be named "Calibration", and the columns described must not be reordered. The sheet contains calibration data including enumerations.</para>

	<variablelist><title>Columns</title>
		<varlistentry><term>parameter name</term>
			<listitem>Name of the calibration</listitem>
		</varlistentry>
		
		<varlistentry><term>type</term>
			<listitem>
				<simplelist type="inline"><member>enumeration</member><member>polynomial</member><member>pointpair</member><member>identical</member></simplelist>
				<itemizedlist>
					<listitem><emphasis>polynomial calibration</emphasis>: the type is 'polynomial', calib1 contains the coefficients and calib2 is empty</listitem>
					<listitem><emphasis>pointpair calibration</emphasis>: the type is 'pointpair', calib1 and calib2 fields contain the start and stop points of each line</listitem>
					<listitem><emphasis>discrete calibration</emphasis>: the type is 'identical', calib1 contains the raw value, calib2 contains the engineering value</listitem>
					<listitem><emphasis>enumeration calibration</emphasis>: the type is 'enumeration', calib1 contains the numeric value, and calib2 contains the corresponding presentation value</listitem>
				</itemizedlist>
			</listitem>
		</varlistentry>
		
		<varlistentry><term>calib1</term>
			<listitem>
				<itemizedlist>
					<listitem><emphasis>polynomial calibration</emphasis>: calib1 contains the coefficients and calib2 is empty</listitem>
					<listitem><emphasis>pointpair calibration</emphasis>: calib1 and calib2 fields contain the start and stop points of each line</listitem>
					<listitem><emphasis>discrete calibration</emphasis>: calib1 contains the raw value, calib2 contains the engineering value</listitem>
					<listitem><emphasis>enumeration calibration</emphasis>: calib1 contains the numeric value which will be mapped to a text state in calib2</listitem>
				</itemizedlist>
			</listitem>
		</varlistentry>
		
		<varlistentry><term>calib2</term>
			<listitem>
				<itemizedlist>
					<listitem><emphasis>polynomial calibration</emphasis>: calib2 is empty</listitem>
					<listitem><emphasis>pointpair calibration</emphasis>: calib2 fields contain the start and stop points of each line</listitem>
					<listitem><emphasis>discrete calibration</emphasis>: calib2 contains the engineering value</listitem>
					<listitem><emphasis>enumeration calibration</emphasis>: calib2 contains the text state corresponding to the numeric value in calib1</listitem>
				</itemizedlist>
			</listitem>
		</varlistentry>
	</variablelist>
</sect1>


<sect1><title>TC sheet</title>
	<para>This sheet must be named "TC", and the columns described must not be reordered. The sheet contains telecommand descriptions and their parameters.</para>
	<para>Constant parameters (i.e. cannot be chosen when building the command) are specified as constants (not a range, not an enum, only a lowlimit/value) and have no name.</para>
	<para>Ordinary parameters (parameters to be filled in by the user of the TC) MUST have a name and an enum or a range</para>
	<para>Parameters that are calculated (eg. checksum) have a range or an enum but NO name</para>

	<variablelist><title>Columns</title>
		<varlistentry><term>packet opsname</term>
			<listitem>The opsname of the TC</listitem>
		</varlistentry>
		
		<varlistentry><term>packet partial full pathname</term>
			<listitem>The part of the full pathname, relative to the CDU (maintained by SpaceApps)</listitem>
		</varlistentry>
		
		<varlistentry><term>packetid</term>
			<listitem>Identifying number.</listitem>
		</varlistentry>
		
		<varlistentry><term>response packet opsname</term>
			<listitem>The opsname of the response packet, can be left empty if no response packet is expected</listitem>
		</varlistentry>
		
		<varlistentry><term>parameter name</term>
			<listitem>Each parameter is optionally given a name</listitem>
		</varlistentry>
		
		<varlistentry><term>flags</term>
			<listitem>Used to encode special cases. Flags are case insensitive and can be concatenated together.
				<itemizedlist>
					<listitem><emphasis>I:</emphasis> ignore completely when generating the Oracle MDB. In Yamcs the parameter is NOT ignored.</listitem>
					<listitem><emphasis>C:</emphasis> (only for parameters): calculated value</listitem>
				</itemizedlist>
			</listitem>
		</varlistentry>
		
		<varlistentry><term>bits</term>
			<listitem>Specifies the number of bits the parameter has. Can be any nonzero number</listitem>
		</varlistentry>
		
		<varlistentry><term>datatype</term>
			<listitem>
				See <xref linkend="sheet-raw-types"></xref> for descriptions of the available raw types.
				<simplelist type="inline">
					<member>uint</member><member>int</member><member>string</member>
					<member>varstr</member><member>float</member><member>enum</member>
				</simplelist>
				All case insensitive. String has a fixed size that is padded if necessary. Varstr has a maximum size and will not be padded
			</listitem>
		</varlistentry>
		
		<varlistentry><term>rel position</term>
			<listitem>Specifies the offset of this parameter to the last bit of the previous parameter. No empty bits means a relative position of 1. Three irrelevant bits between parameter n and parameter n+1 means a relative position of 4.</listitem>
		</varlistentry>
		
		<varlistentry><term>Value/lowlimit</term>
			<listitem>
				Several cases, contains engineering values:
				<itemizedlist>
					<listitem>this column contains 1 value, but the highlimit column is left empty for this parameter, the value means a fixed value for this parameters</listitem>
					<listitem>the column contains 1 value and the highlimit column also contains a value for this parameter, the 2 values specify a range for this parameters</listitem>
					<listitem>the column contains semicolons and each value seperated between semicolons (do NOT use spaces before/after the semicolons) is either:
						<itemizedlist>
							<listitem>a '=' b pair. Lefthandside = textual representation of the righthandside value, this textual representations cannot be longer than 8 characters</listitem>
							<listitem>x where x is a number and meaning that any value larger or equal to x is also a valid value. Having this means that also a highlimit must be filled in combining the previous ones is also possible, see example.</listitem>
						</itemizedlist>
						EXAMPLE: 'ON=1;OFF=0;3' means that value 1 is encoded as ON, value 0 is encoded as OFF and any other value greater than or equal to 3 is also a valid value (if the highlimit field has been filled in and > 3)
					</listitem>
				</itemizedlist>
			</listitem>
		</varlistentry>
		
		<varlistentry><term>highlimit</term>
			<listitem>The upper limit of the values that the parameter can take</listitem>
		</varlistentry>
		
		<varlistentry><term>engunit</term>
			<listitem>The optional engineering unit for the parameters, see the Measurement sheet for the possibilities</listitem>
		</varlistentry>
		
		<varlistentry><term>calibration</term>
			<listitem>Name of a calibration described in the Calibration sheet.</listitem>
		</varlistentry>
		
		<varlistentry><term>description</term>
			<listitem>An optional description for the commands or parameters.</listitem>
		</varlistentry>
	</variablelist>
</sect1>
	
<sect1><title>RESP sheet</title>
	<para>This sheet is optional, but if present must be named "RESP" and the columns must not be reordered. The sheet specifies the basic identifying information for packets which are expected in response to TC.</para>
	
	<variablelist><title>Columns</title>
		<varlistentry><term>response opsname</term>
			<listitem>OpsName of the packet</listitem>
		</varlistentry>
		
		<varlistentry><term>response partial full pathname</term>
			<listitem>The part of the full pathname, relative to the CDU (maintained by SpaceApps)</listitem>
		</varlistentry>
		
		<varlistentry><term>apid</term>
			<listitem>APID to which the packet belongs</listitem>
		</varlistentry>
		
		<varlistentry><term>packetid</term>
			<listitem>ID of the packet.</listitem>
		</varlistentry>
		
		<varlistentry><term>measurement opsname</term>
			<listitem>OpsName of the triggering packet</listitem>
		</varlistentry>
		
		<varlistentry><term>relpos</term>
			<listitem></listitem>
		</varlistentry>
		
		<varlistentry><term>description</term>
			<listitem>Optional human readable text.</listitem>
		</varlistentry>
	</variablelist>
</sect1>

<sect1><title>Algorithms sheet</title>
	<para>This sheet must be named "Algorithms", and the columns described must not be reordered. The sheet contains arbitrarily complex user algorithms that can set (derived) output parameters based on any number of input parameters.</para>
    <section><title>Columns</title>
        <variablelist>
            <varlistentry><term>algorithm name</term>
                <listitem>The identifying name of the algorithm. Any entry starting with '#' is treated as a comment row.</listitem>
            </varlistentry>
            
            <varlistentry><term>text</term>
                <listitem>The code of the algorithm</listitem>
            </varlistentry>
            
            <varlistentry><term>trigger</term>
                <listitem>Optionally specify when the algorithm should trigger. If left blank, algorithms will trigger as soon as at least one of their input parameters is updated, which is expected to suit most use cases. Other options are:
                    <itemizedlist>
                        <listitem>OnParameterUpdate('/some-param', 'some-other-param'): Execute the algorithm whenever <emphasis>any</emphasis> of the specified parameters are updated</listitem>
                    </itemizedlist>
                    <itemizedlist>
                        <listitem>OnPeriodicRate(&lt;fireRate&gt;): Execute the algorithm every <code>fireRate</code> milliseconds.</listitem>
                    </itemizedlist>
                </listitem>
            </varlistentry>
            
            <varlistentry><term>in/out</term>
                <listitem>Whether a parameter is inputted to, or outputted from the algorithm. Parameters are defined, one per line, following the line defining the algorithm name.</listitem>
            </varlistentry>
            
            <varlistentry><term>parameter name</term>
                <listitem>
                    <para>Reference name of a parameter. Input parameters can come from any sort of parameter provider. Output parameters should be defined in the same spreadsheet as the algorithm definition.</para>
                    <para>Both input and output parameters must be defined in the Parameters sheet and can have calibrations linked to them. In most cases there is no need to specify a bitsize for an output parameter.</para>
                    <para>Algorithms can be interdependent, meaning that the output parameters of one algorithm could be used as input parameters of another algorithm.</para>
                </listitem>
            </varlistentry>
            
            <varlistentry><term>instance</term>
                <listitem>
                    <para>Allows inputting a specific instance of a parameter. At this stage, only values smaller than or equal to zero are allowed. A negative value, means going back in time. Zero is the default and means the actual value. This functionality allows for time-based window operations over multiple packets. Algorithms with windowed parameters will only trigger as soon as all of those parameters have all instances defined (i.e. when the windows are full).</para>
                    <para>Note that this column should be left empty for output parameters.</para>
                </listitem>
            </varlistentry>
            
            <varlistentry><term>name used in algorithm</term>
                <listitem>
                    <para>An optional friendlier name for use in the algorithm. By default the parameter name will be used, which may lead to runtime errors depending on the naming conventions of the applicable script language.</para>
                    <para>Note that a unique name will be required in this column, when multiple instances of the same parameter are inputted.</para>
                </listitem>
            </varlistentry>
        </variablelist>
    </section>
    
    <section><title>Example definition</title>
        <table frame="all" orient="land">
            <tgroup cols="7" align="left" colsep="1" rowsep="1">
                <colspec colname="c1" colwidth="1*" />
                <colspec colname="c2" colwidth="5*" />
                <colspec colname="c3" colwidth="1*" />
                <colspec colname="c4" colwidth="1*" />
                <colspec colname="c5" colwidth="4*" />
                <colspec colname="c6" colwidth="1*" />
                <colspec colname="c7" colwidth="1*" />
                <thead>
                    <row>
                        <entry>algo name</entry>
                        <entry>text</entry>
                        <entry>trigger</entry>
                        <entry>in/out</entry>
                        <entry>param name</entry>
                        <entry>instance</entry>
                        <entry>friendly name</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>my_avg</entry>
                        <entry>r = (a.value + b.value + c.value) / 3;</entry>
                        <entry />
                        <entry />
                        <entry />
                        <entry />
                        <entry />
                    </row>
                    <row>
                        <entry />
                        <entry />
                        <entry />
                        <entry>in</entry>
                        <entry>/MY_SS/some_temperature</entry>
                        <entry>-2</entry>
                        <entry>a</entry>
                    </row>
                    <row>
                        <entry />
                        <entry />
                        <entry />
                        <entry>in</entry>
                        <entry>/MY_SS/some_temperature</entry>
                        <entry>-1</entry>
                        <entry>b</entry>
                    </row>
                    <row>
                        <entry />
                        <entry />
                        <entry />
                        <entry>in</entry>
                        <entry>/MY_SS/some_temperature</entry>
                        <entry>0</entry>
                        <entry>c</entry>
                    </row>
                    <row>
                        <entry />
                        <entry />
                        <entry />
                        <entry>out</entry>
                        <entry>/MY_SS/avg_out</entry>
                        <entry />
                        <entry>r</entry>
                    </row>
                </tbody>
            </tgroup>
        </table>
    </section>
</sect1>

<sect1><title>Alarms sheet</title>
	<para>This sheet must be named "Alarms", and the columns described must not be reordered. The sheet defines how the monitoring results of a parameter should be derived. E.g. if a parameter exceeds some pre-defined value, this parameter's state changes to CRITICAL.</para>
    <para>When monitoring results change, events are generated and can be followed in the Yamcs Event Viewer.</para>
    <section><title>Columns</title>
        <variablelist>
            <varlistentry><term>parameter name</term>
                <listitem>The reference name of the parameter for which this alarm definition applies</listitem>
            </varlistentry>
            
            <varlistentry><term>context</term>
                <listitem>
                    <para>A condition under which the defined triggers apply. This can be used to define multiple different sets of triggers for one and the same parameter, that apply depending on some other condition (typically a state of some kind). When left blank, the defined set of conditions are assumed to be part of the <emphasis>default</emphasis> context.</para>
                    <para>Contextual alarms are evaluated from top to bottom, until a match is found. If no context conditions apply, the default context applies.</para>
                </listitem>
            </varlistentry>
            
            <varlistentry><term>report</term>
                <listitem>When alarms under the given context should be reported. Should be one of <code>OnSeverityChange</code> or <code>OnValueChange</code>. With <code>OnSeverityChange</code> being the default. The condition <code>OnValueChange</code> will check value changes based on the engineering values. It can also be applied to a parameter without any defined severity levels, in which case an event will be generated with every change in value.</listitem>
            </varlistentry>
            
            <varlistentry><term>minimum violations</term>
                <listitem>Number of successive instances that meet any of the alarm conditions under the given context before the alarm event triggers (defaults to 1). This field affects when an event is generated (i.e. only after X violations). It does not affect the monitoring result associated with each parameter. That would still be out of limits, even after a first violation.</listitem>
            </varlistentry>
            
            <varlistentry><term>watch: trigger type</term>
                <listitem>One of low, high or state. For each context of a numeric parameter, you can have both a low and a high trigger that lead to the WATCH state. For each context of an enumerated parameter, you can have multiple state triggers that lead to the WATCH state.</listitem>
            </varlistentry>
            
            <varlistentry><term>watch: trigger value</term>
                <listitem>
                    <para>If the trigger type is <code>low</code> or <code>high</code>: a numeric value indicating the low resp. high limit value. The value is considered inclusive with respect to its nominal range. For example, a low limit of 20, will have a WATCH alarm if and only if its value is smaller than 20.</para>
                    <para>If the trigger value is <code>state</code>: a state that would bring the given parameter in its WATCH state.</para>
                </listitem>
            </varlistentry>
            
            <varlistentry><term>warning: trigger type</term>
                <listitem>See 'watch: trigger type'.</listitem>
            </varlistentry>
            
            <varlistentry><term>warning: trigger value</term>
                <listitem>See 'watch: trigger value'.</listitem>
            </varlistentry>
            
            <varlistentry><term>distress: trigger type</term>
                <listitem>See 'watch: trigger type'.</listitem>
            </varlistentry>
            
            <varlistentry><term>distress: trigger value</term>
                <listitem>See 'watch: trigger value'.</listitem>
            </varlistentry>

            <varlistentry><term>critical: trigger type</term>
                <listitem>See 'watch: trigger type'.</listitem>
            </varlistentry>

            <varlistentry><term>critical: trigger value</term>
                <listitem>See 'watch: trigger value'.</listitem>
            </varlistentry>
            
            <varlistentry><term>severe: trigger type</term>
                <listitem>See 'watch: trigger type'.</listitem>
            </varlistentry>
            
            <varlistentry><term>severe: trigger value</term>
                <listitem>See 'watch: trigger value'.</listitem>
            </varlistentry>
        </variablelist>
    </section>
    
    <section><title>Example definition</title>
        <table frame="all" orient="land">
            <tgroup cols="14" align="left" colsep="1" rowsep="1">
                <colspec colname="c1" colwidth="2*" />
                <colspec colname="c2" colwidth="2*" />
                <colspec colname="c3" colwidth="1*" />
                <colspec colname="c4" colwidth="2*" />
                <colspec colname="c5" colwidth="1*" />
                <colspec colname="c6" colwidth="1*" />
                <colspec colname="c7" colwidth="1*" />
                <colspec colname="c8" colwidth="1*" />
                <colspec colname="c9" colwidth="1*" />
                <colspec colname="ca" colwidth="1*" />
                <colspec colname="cb" colwidth="1*" />
                <colspec colname="cc" colwidth="1*" />
                <colspec colname="cd" colwidth="1*" />
                <colspec colname="ce" colwidth="1*" />

                <thead>
                    <row>
                        <entry>param name</entry>
                        <entry>context</entry>
                        <entry>report</entry>
                        <entry>min violations</entry>
                        <entry namest="c5" nameend="c6">watch</entry>
                        <entry namest="c7" nameend="c8">warning</entry>
                        <entry namest="c9" nameend="ca">distress</entry>
                        <entry namest="cb" nameend="cc">critical</entry>
                        <entry namest="cd" nameend="ce">severe</entry>
                    </row>
                    <row>
                        <entry />
                        <entry />
                        <entry />
                        <entry />
                        <entry>trigger type</entry>
                        <entry>trigger value</entry>
                        <entry>trigger type</entry>
                        <entry>trigger value</entry>
                        <entry>trigger type</entry>
                        <entry>trigger value</entry>
                        <entry>trigger type</entry>
                        <entry>trigger value</entry>
                        <entry>trigger type</entry>
                        <entry>trigger value</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>my_int_para</entry>
                        <entry />
                        <entry />
                        <entry />
                        <entry>low</entry>
                        <entry>-11</entry>
                        <entry>low</entry>
                        <entry>-22</entry>
                        <entry>low</entry>
                        <entry>-33</entry>
                        <entry />
                        <entry />
                        <entry />
                        <entry />
                    </row>
                    <row>
                        <entry />
                        <entry />
                        <entry />
                        <entry />
                        <entry>high</entry>
                        <entry>30</entry>
                        <entry>high</entry>
                        <entry>40</entry>
                        <entry>high</entry>
                        <entry>50</entry>
                        <entry>high</entry>
                        <entry>60</entry>
                        <entry>high</entry>
                        <entry>70</entry>
                    </row>
                    <row>
                        <entry />
                        <entry />
                        <entry />
                        <entry />
                        <entry />
                        <entry />
                        <entry />
                        <entry />
                        <entry />
                        <entry />
                        <entry />
                        <entry />
                        <entry />
                        <entry />
                    </row>
                    <row>
                        <entry />
                        <entry>other_para = 4</entry>
                        <entry />
                        <entry>3</entry>
                        <entry>high</entry>
                        <entry>40</entry>
                        <entry>high</entry>
                        <entry>50</entry>
                        <entry />
                        <entry />
                        <entry>high</entry>
                        <entry>70</entry>
                        <entry />
                        <entry />
                    </row>
                    <row>
                        <entry />
                        <entry />
                        <entry />
                        <entry />
                        <entry />
                        <entry />
                        <entry />
                        <entry />
                        <entry />
                        <entry />
                        <entry />
                        <entry />
                        <entry />
                        <entry />
                    </row>
                    <row>
                        <entry>my_enum_para</entry>
                        <entry />
                        <entry />
                        <entry />
                        <entry>state</entry>
                        <entry>ST1</entry>
                        <entry>state</entry>
                        <entry>ST2</entry>
                        <entry />
                        <entry />
                        <entry>state</entry>
                        <entry>ST4</entry>
                        <entry />
                        <entry />
                    </row>
                    <row>
                        <entry />
                        <entry />
                        <entry />
                        <entry />
                        <entry />
                        <entry />
                        <entry>state</entry>
                        <entry>ST3</entry>
                        <entry />
                        <entry />
                        <entry />
                        <entry />
                        <entry />
                        <entry />
                    </row>
                </tbody>
            </tgroup>
        </table>
    </section>
</sect1>
</appendix>
