<chapter><title>Introduction</title>

<para>Yamcs, (Yet Another Mission Control System) is a software package for handling
long term payload operations. The package consists of a server (<xref linkend="yamcs-server"/>)
for handling telemetry (TM) and telecommands (TC), and client applications for managing the
server (<xref linkend="monitor"/>), accessing live and archived data (<xref linkend="archive-browser"/>), and monitoring
events (<xref linkend="eventviewer"/>).</para>

<para>The core of Yamcs is Open Source under the GNU AFFERO General Public License (version 3) <xref linkend="RD1"></xref>, with some additional USOC oriented proprietary packages. Yamcs software is available from <ulink url="https://github.com/yamcs/yamcs">github.com/yamcs</ulink></para>


<section><title>Features</title>

<para>All the Yamcs components are implemented in Java and
the software is delivered as rpm or deb packages on Linux
or as a simple zip file on Windows. One of the main goals
when implementing Yamcs has been to keep it as light as
possible.</para>


<itemizedlist>
	<listitem>Acquisition of telemetry and dispatching of commands using different protocols: 
		<itemizedlist>
			<listitem>CD-MCS multicast,</listitem>
			<listitem>raw packets over TCP,</listitem>
			<listitem>DaSS (Columbus Ground Segment specific protocol),</listitem>
			<listitem> PaCTS (EGSE software used by some of the Columbus payloads)</listitem>
		</itemizedlist>
	</listitem>
	<listitem>Custom protocols can be easily added.</listitem>
	<listitem>Comfortable packet structure definition, partially implementing the XTCE standard <xref linkend="RD3"></xref></listitem>
	<listitem>Compatible with the Unified Synoptic System (USS): www.e-columbus.de/projects/uss</listitem>
	<listitem>Telemetry replay, scientific data extraction, profiling, and offline analysis</listitem>
	<listitem>Detailed packet and parameter inspection.</listitem>
	<listitem>Remote and cascaded connectivity from external science users or other centers.</listitem>
	<listitem>Username/password or SSL (certificate) based authentication. All the authentication data is stored in an LDAP database.</listitem>
	<listitem>Authorization at parameter, packet, and command level. Also the authorization data is stored in an LDAP database.</listitem>
</itemizedlist>

</section>



</chapter>
