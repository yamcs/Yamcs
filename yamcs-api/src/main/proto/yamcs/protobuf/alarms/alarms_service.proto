syntax="proto2";

package yamcs.protobuf.alarms;

option java_package = "org.yamcs.protobuf.alarms";
option java_outer_classname = "AlarmsServiceProto";
option java_multiple_files = true;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

import "yamcs/api/annotations.proto";
import "yamcs/protobuf/alarms/alarms.proto";


service AlarmsApi {

  // List alarms
  rpc ListAlarms(ListAlarmsRequest) returns (ListAlarmsResponse) {
    option (yamcs.api.route) = {
      get: "/api/archive/{instance}/alarms"
    };
  }
  
  // List alarms for a specific parameter
  rpc ListParameterAlarms(ListParameterAlarmsRequest) returns (ListParameterAlarmsResponse) {
    option (yamcs.api.route) = {
      get: "/api/archive/{instance}/alarms/{parameter*}"
    };
  }
  
  // List alarms
  rpc ListProcessorAlarms(ListProcessorAlarmsRequest) returns (ListProcessorAlarmsResponse) {
    option (yamcs.api.route) = {
      get: "/api/processors/{instance}/{processor}/alarms"
    };
  }
  
  // Update an alarm
  rpc EditAlarm(EditAlarmRequest) returns (google.protobuf.Empty) {
    option (yamcs.api.route) = {
      patch: "/api/processors/{instance}/{processor}/alarms/{name*}/{seqnum}"
      body: "*"
    };
  }
  
  // Receive alarm status updates
  rpc SubscribeGlobalStatus(SubscribeGlobalStatusRequest) returns (stream GlobalAlarmStatus) {
    option (yamcs.api.websocket) = {
      topic: "global-alarm-status"
    };
  }
  
  // Receive alarm updates
  rpc SubscribeAlarms(SubscribeAlarmsRequest) returns (stream AlarmData) {
    option (yamcs.api.websocket) = {
      topic: "alarms"
    };
  }
}

message ListAlarmsRequest {
  // Yamcs instance name.
  optional string instance = 1;
  
  // The zero-based row number at which to start outputting results.
  // Default: ``0``
  optional int64 pos = 2;
  
  // The maximum number of returned records per page. Choose this value
  // too high and you risk hitting the maximum response size limit
  // enforced by the server. Default: ``100``
  optional int32 limit = 3;
  
  // Filter the lower bound of the alarm's trigger time. Specify a date
  // string in ISO 8601 format. This bound is inclusive.
  optional google.protobuf.Timestamp start = 4;
  
  // Filter the upper bound of the alarm's trigger time. Specify a date
  // string in ISO 8601 format. This bound is exclusive.
  optional google.protobuf.Timestamp stop = 5;
  
  // The order of the returned results. Can be either ``asc`` or
  // ``desc``. The sorting is always by trigger time (i.e. the
  // generation time of the trigger value). Default: ``desc``
  optional string order = 6;
}

message ListAlarmsResponse {
  repeated AlarmData alarms = 1;
}

message ListParameterAlarmsRequest {
  optional string instance = 1;
  optional string parameter = 2;
  optional int64 pos = 3;
  optional int32 limit = 4;
  optional google.protobuf.Timestamp start = 5;
  optional google.protobuf.Timestamp stop = 6;
  optional string order = 7;
  optional bool detail = 8;
}

message ListParameterAlarmsResponse {
  repeated AlarmData alarms = 1;
}

message ListProcessorAlarmsRequest {
  optional string instance = 1;
  optional string processor = 2;
}

message ListProcessorAlarmsResponse {
  repeated AlarmData alarms = 1;
}

message SubscribeAlarmsRequest {
  optional string instance = 1;
  optional string processor = 2;
}

message EditAlarmRequest {
  // Yamcs instance name.
  optional string instance = 1;
  
  // Processor name.
  optional string processor = 2;
  
  // Alarm name.
  optional string name = 3;
  
  optional uint32 seqnum = 4;
  
  // **Required.** The state of the alarm. 
  // Either ``acknowledged``, ``shelved``, ``unshelved`` or ``cleared``.
  optional string state = 5;
  
  // Message documenting the alarm change.
  optional string comment = 6;

  //shelve time in milliseconds (if the state = shelved)
  //can be left out which means it is shelved indefinitely
  optional uint64 shelveDuration = 7;
}

message SubscribeGlobalStatusRequest {
  optional string instance = 1;
  optional string processor = 2;
}

message GlobalAlarmStatus {  
  //the number of active unacknoleged alarms
  optional int32 unacknowledgedCount = 1;
  
  //true if there is at least one unacknowledged alarm not OK (i.e. latest value of parameter still out of limits)
  optional bool unacknowledgedActive = 2;
  
  
  //the number of active ackonwledged alarms 
  optional int32 acknowledgedCount = 3;
  
  //true if there is at least one acknowledged alarm not OK (i.e. latest value of parameter still out of limits)
  optional bool acknowledgedActive = 4;
  
  //the number of shelved alarms
  optional int32 shelvedCount = 5;
 //true if there is at least one shelved alarm not OK (i.e. latest value of parameter still out of limits)
  optional bool shelvedActive = 6;
}
