package websocket;
option java_package = "org.yamcs.protobuf";

import "yamcs.proto";
import "commanding.proto";
import "pvalue.proto";

// TODO we should probably include messages for all the sub-operations here.

message WebSocketClientMessage {
  optional uint32 protocolVersion=1;
  optional uint32 sequenceNumber=2;
  optional string resource=3;
  optional string operation=4;
  optional bytes data=5;
}

message WebSocketServerMessage {
  enum MessageType {
    REPLY=2; // one-time rpc-style ACK reply
    EXCEPTION=3; // one-time rpc-style exception reply
    DATA=4; // various subscribed data
  }

  message WebSocketReplyData {
    optional uint32 protocolVersion=1;
    optional int32 sequenceNumber=2; // we allow for -1 here
  }

  message WebSocketExceptionData {
    optional uint32 protocolVersion=1;
    optional int32 sequenceNumber=2; // we allow for -1 here
    optional string type=3;
    optional string message=4;
    optional bytes data=5; // Structured exception data
  }

  // Currently hard-coding the set of available data types for easier client processing, but
  // could in the future just make it bytes just like with the requests.
  // oh, and protobuf3 plans to support an Any-type.
  message WebSocketSubscriptionData {
    optional uint32 sequenceNumber=1;
    optional yamcs.ProtoDataType type=2;
    optional pvalue.ParameterData parameterData=3;
    optional commanding.CommandHistoryEntry command=4;
  }

  optional MessageType type=1;
  optional WebSocketReplyData reply=2;
  optional WebSocketExceptionData exception=3;
  optional WebSocketSubscriptionData data=4;
}

service WebSocketService {
  rpc sendMessage(WebSocketClientMessage) returns (WebSocketServerMessage);
}
