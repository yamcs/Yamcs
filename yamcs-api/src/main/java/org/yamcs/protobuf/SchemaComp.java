// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from comp.proto

package org.yamcs.protobuf;


public final class SchemaComp
{

    public static final class ComputationDef
    {
        public static final org.yamcs.protobuf.SchemaComp.ComputationDef.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaComp.ComputationDef.MessageSchema();
        public static final org.yamcs.protobuf.SchemaComp.ComputationDef.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaComp.ComputationDef.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Comp.ComputationDef>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Comp.ComputationDef message) throws java.io.IOException
            {
                if(message.hasName())
                    output.writeString(1, message.getName(), false);
                if(message.hasExpression())
                    output.writeString(2, message.getExpression(), false);
                for(org.yamcs.protobuf.Yamcs.NamedObjectId argument : message.getArgumentList())
                    output.writeObject(3, argument, org.yamcs.protobuf.SchemaYamcs.NamedObjectId.WRITE, true);

                if(message.hasLanguage())
                    output.writeString(4, message.getLanguage(), false);
            }
            public boolean isInitialized(org.yamcs.protobuf.Comp.ComputationDef message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaComp.ComputationDef.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaComp.ComputationDef.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Comp.ComputationDef> typeClass()
            {
                return org.yamcs.protobuf.Comp.ComputationDef.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Comp.ComputationDef.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Comp.ComputationDef.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Comp.ComputationDef message) throws java.io.IOException {}
            public org.yamcs.protobuf.Comp.ComputationDef newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Comp.ComputationDef.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Comp.ComputationDef.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setName(input.readString());
                            break;
                        case 2:
                            builder.setExpression(input.readString());
                            break;
                        case 3:
                            builder.addArgument(input.mergeObject(org.yamcs.protobuf.Yamcs.NamedObjectId.newBuilder(), org.yamcs.protobuf.SchemaYamcs.NamedObjectId.MERGE));

                            break;
                        case 4:
                            builder.setLanguage(input.readString());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Comp.ComputationDef.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Comp.ComputationDef.Builder newMessage()
            {
                return org.yamcs.protobuf.Comp.ComputationDef.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaComp.ComputationDef.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaComp.ComputationDef.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Comp.ComputationDef.Builder> typeClass()
            {
                return org.yamcs.protobuf.Comp.ComputationDef.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Comp.ComputationDef.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Comp.ComputationDef.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Comp.ComputationDef.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "name";
                case 2: return "expression";
                case 3: return "argument";
                case 4: return "language";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("name", 1);
            fieldMap.put("expression", 2);
            fieldMap.put("argument", 3);
            fieldMap.put("language", 4);
        }
    }

    public static final class ComputationDefList
    {
        public static final org.yamcs.protobuf.SchemaComp.ComputationDefList.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaComp.ComputationDefList.MessageSchema();
        public static final org.yamcs.protobuf.SchemaComp.ComputationDefList.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaComp.ComputationDefList.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Comp.ComputationDefList>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Comp.ComputationDefList message) throws java.io.IOException
            {
                for(org.yamcs.protobuf.Comp.ComputationDef compDef : message.getCompDefList())
                    output.writeObject(1, compDef, org.yamcs.protobuf.SchemaComp.ComputationDef.WRITE, true);

            }
            public boolean isInitialized(org.yamcs.protobuf.Comp.ComputationDefList message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaComp.ComputationDefList.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaComp.ComputationDefList.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Comp.ComputationDefList> typeClass()
            {
                return org.yamcs.protobuf.Comp.ComputationDefList.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Comp.ComputationDefList.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Comp.ComputationDefList.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Comp.ComputationDefList message) throws java.io.IOException {}
            public org.yamcs.protobuf.Comp.ComputationDefList newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Comp.ComputationDefList.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Comp.ComputationDefList.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addCompDef(input.mergeObject(org.yamcs.protobuf.Comp.ComputationDef.newBuilder(), org.yamcs.protobuf.SchemaComp.ComputationDef.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Comp.ComputationDefList.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Comp.ComputationDefList.Builder newMessage()
            {
                return org.yamcs.protobuf.Comp.ComputationDefList.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaComp.ComputationDefList.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaComp.ComputationDefList.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Comp.ComputationDefList.Builder> typeClass()
            {
                return org.yamcs.protobuf.Comp.ComputationDefList.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Comp.ComputationDefList.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Comp.ComputationDefList.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Comp.ComputationDefList.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "compDef";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("compDef", 1);
        }
    }

}
