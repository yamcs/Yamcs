// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from rest.proto

package org.yamcs.protobuf;


public final class SchemaRest
{

    public static final class RestExceptionMessage
    {
        public static final org.yamcs.protobuf.SchemaRest.RestExceptionMessage.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.RestExceptionMessage.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.RestExceptionMessage.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.RestExceptionMessage.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestExceptionMessage>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestExceptionMessage message) throws java.io.IOException
            {
                if(message.hasType())
                    output.writeString(1, message.getType(), false);
                if(message.hasMsg())
                    output.writeString(2, message.getMsg(), false);
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestExceptionMessage message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestExceptionMessage.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestExceptionMessage.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestExceptionMessage> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestExceptionMessage.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestExceptionMessage.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestExceptionMessage.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestExceptionMessage message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.RestExceptionMessage newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestExceptionMessage.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestExceptionMessage.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setType(input.readString());
                            break;
                        case 2:
                            builder.setMsg(input.readString());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestExceptionMessage.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.RestExceptionMessage.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.RestExceptionMessage.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestExceptionMessage.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestExceptionMessage.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestExceptionMessage.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestExceptionMessage.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestExceptionMessage.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestExceptionMessage.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestExceptionMessage.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "type";
                case 2: return "msg";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("type", 1);
            fieldMap.put("msg", 2);
        }
    }

    public static final class RestArgumentType
    {
        public static final org.yamcs.protobuf.SchemaRest.RestArgumentType.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.RestArgumentType.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.RestArgumentType.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.RestArgumentType.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestArgumentType>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestArgumentType message) throws java.io.IOException
            {
                if(message.hasName())
                    output.writeString(1, message.getName(), false);
                if(message.hasValue())
                    output.writeString(2, message.getValue(), false);
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestArgumentType message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestArgumentType.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestArgumentType.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestArgumentType> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestArgumentType.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestArgumentType.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestArgumentType.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestArgumentType message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.RestArgumentType newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestArgumentType.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestArgumentType.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setName(input.readString());
                            break;
                        case 2:
                            builder.setValue(input.readString());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestArgumentType.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.RestArgumentType.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.RestArgumentType.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestArgumentType.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestArgumentType.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestArgumentType.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestArgumentType.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestArgumentType.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestArgumentType.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestArgumentType.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "name";
                case 2: return "value";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("name", 1);
            fieldMap.put("value", 2);
        }
    }

    public static final class RestCommandType
    {
        public static final org.yamcs.protobuf.SchemaRest.RestCommandType.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.RestCommandType.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.RestCommandType.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.RestCommandType.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestCommandType>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestCommandType message) throws java.io.IOException
            {
                if(message.hasOrigin())
                    output.writeString(1, message.getOrigin(), false);
                if(message.hasSequenceNumber())
                    output.writeInt32(2, message.getSequenceNumber(), false);
                if(message.hasId())
                    output.writeObject(3, message.getId(), org.yamcs.protobuf.SchemaYamcs.NamedObjectId.WRITE, false);

                for(org.yamcs.protobuf.Rest.RestArgumentType arguments : message.getArgumentsList())
                    output.writeObject(4, arguments, org.yamcs.protobuf.SchemaRest.RestArgumentType.WRITE, true);

            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestCommandType message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestCommandType.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestCommandType.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestCommandType> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestCommandType.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestCommandType.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestCommandType.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestCommandType message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.RestCommandType newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestCommandType.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestCommandType.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setOrigin(input.readString());
                            break;
                        case 2:
                            builder.setSequenceNumber(input.readInt32());
                            break;
                        case 3:
                            builder.setId(input.mergeObject(org.yamcs.protobuf.Yamcs.NamedObjectId.newBuilder(), org.yamcs.protobuf.SchemaYamcs.NamedObjectId.MERGE));

                            break;
                        case 4:
                            builder.addArguments(input.mergeObject(org.yamcs.protobuf.Rest.RestArgumentType.newBuilder(), org.yamcs.protobuf.SchemaRest.RestArgumentType.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestCommandType.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.RestCommandType.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.RestCommandType.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestCommandType.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestCommandType.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestCommandType.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestCommandType.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestCommandType.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestCommandType.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestCommandType.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "origin";
                case 2: return "sequenceNumber";
                case 3: return "id";
                case 4: return "arguments";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("origin", 1);
            fieldMap.put("sequenceNumber", 2);
            fieldMap.put("id", 3);
            fieldMap.put("arguments", 4);
        }
    }

    public static final class RestListAvailableParametersRequest
    {
        public static final org.yamcs.protobuf.SchemaRest.RestListAvailableParametersRequest.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.RestListAvailableParametersRequest.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.RestListAvailableParametersRequest.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.RestListAvailableParametersRequest.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestListAvailableParametersRequest>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestListAvailableParametersRequest message) throws java.io.IOException
            {
                for(String namespaces : message.getNamespacesList())
                    output.writeString(1, namespaces, true);
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestListAvailableParametersRequest message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestListAvailableParametersRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestListAvailableParametersRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestListAvailableParametersRequest> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestListAvailableParametersRequest.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestListAvailableParametersRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestListAvailableParametersRequest.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestListAvailableParametersRequest message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.RestListAvailableParametersRequest newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestListAvailableParametersRequest.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestListAvailableParametersRequest.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addNamespaces(input.readString());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestListAvailableParametersRequest.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.RestListAvailableParametersRequest.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.RestListAvailableParametersRequest.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestListAvailableParametersRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestListAvailableParametersRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestListAvailableParametersRequest.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestListAvailableParametersRequest.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestListAvailableParametersRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestListAvailableParametersRequest.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestListAvailableParametersRequest.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "namespaces";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("namespaces", 1);
        }
    }

    public static final class RestListAvailableParametersResponse
    {
        public static final org.yamcs.protobuf.SchemaRest.RestListAvailableParametersResponse.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.RestListAvailableParametersResponse.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.RestListAvailableParametersResponse.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.RestListAvailableParametersResponse.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestListAvailableParametersResponse>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestListAvailableParametersResponse message) throws java.io.IOException
            {
                for(org.yamcs.protobuf.Yamcs.NamedObjectId ids : message.getIdsList())
                    output.writeObject(2, ids, org.yamcs.protobuf.SchemaYamcs.NamedObjectId.WRITE, true);

            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestListAvailableParametersResponse message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestListAvailableParametersResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestListAvailableParametersResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestListAvailableParametersResponse> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestListAvailableParametersResponse.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestListAvailableParametersResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestListAvailableParametersResponse.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestListAvailableParametersResponse message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.RestListAvailableParametersResponse newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestListAvailableParametersResponse.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestListAvailableParametersResponse.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 2:
                            builder.addIds(input.mergeObject(org.yamcs.protobuf.Yamcs.NamedObjectId.newBuilder(), org.yamcs.protobuf.SchemaYamcs.NamedObjectId.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestListAvailableParametersResponse.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.RestListAvailableParametersResponse.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.RestListAvailableParametersResponse.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestListAvailableParametersResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestListAvailableParametersResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestListAvailableParametersResponse.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestListAvailableParametersResponse.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestListAvailableParametersResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestListAvailableParametersResponse.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestListAvailableParametersResponse.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 2: return "ids";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("ids", 2);
        }
    }

    public static final class RestValidateCommandRequest
    {
        public static final org.yamcs.protobuf.SchemaRest.RestValidateCommandRequest.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.RestValidateCommandRequest.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.RestValidateCommandRequest.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.RestValidateCommandRequest.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestValidateCommandRequest>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestValidateCommandRequest message) throws java.io.IOException
            {
                for(org.yamcs.protobuf.Rest.RestCommandType commands : message.getCommandsList())
                    output.writeObject(1, commands, org.yamcs.protobuf.SchemaRest.RestCommandType.WRITE, true);

            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestValidateCommandRequest message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestValidateCommandRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestValidateCommandRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestValidateCommandRequest> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestValidateCommandRequest.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestValidateCommandRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestValidateCommandRequest.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestValidateCommandRequest message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.RestValidateCommandRequest newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestValidateCommandRequest.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestValidateCommandRequest.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addCommands(input.mergeObject(org.yamcs.protobuf.Rest.RestCommandType.newBuilder(), org.yamcs.protobuf.SchemaRest.RestCommandType.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestValidateCommandRequest.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.RestValidateCommandRequest.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.RestValidateCommandRequest.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestValidateCommandRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestValidateCommandRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestValidateCommandRequest.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestValidateCommandRequest.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestValidateCommandRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestValidateCommandRequest.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestValidateCommandRequest.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "commands";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("commands", 1);
        }
    }

    public static final class RestValidateCommandResponse
    {
        public static final org.yamcs.protobuf.SchemaRest.RestValidateCommandResponse.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.RestValidateCommandResponse.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.RestValidateCommandResponse.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.RestValidateCommandResponse.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestValidateCommandResponse>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestValidateCommandResponse message) throws java.io.IOException
            {
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestValidateCommandResponse message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestValidateCommandResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestValidateCommandResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestValidateCommandResponse> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestValidateCommandResponse.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestValidateCommandResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestValidateCommandResponse.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestValidateCommandResponse message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.RestValidateCommandResponse newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestValidateCommandResponse.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestValidateCommandResponse.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestValidateCommandResponse.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.RestValidateCommandResponse.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.RestValidateCommandResponse.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestValidateCommandResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestValidateCommandResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestValidateCommandResponse.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestValidateCommandResponse.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestValidateCommandResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestValidateCommandResponse.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestValidateCommandResponse.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
        }
    }

    public static final class RestDumpRawMdbRequest
    {
        public static final org.yamcs.protobuf.SchemaRest.RestDumpRawMdbRequest.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.RestDumpRawMdbRequest.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.RestDumpRawMdbRequest.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.RestDumpRawMdbRequest.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestDumpRawMdbRequest>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestDumpRawMdbRequest message) throws java.io.IOException
            {
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestDumpRawMdbRequest message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestDumpRawMdbRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestDumpRawMdbRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestDumpRawMdbRequest> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestDumpRawMdbRequest.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestDumpRawMdbRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestDumpRawMdbRequest.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestDumpRawMdbRequest message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.RestDumpRawMdbRequest newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestDumpRawMdbRequest.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestDumpRawMdbRequest.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestDumpRawMdbRequest.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.RestDumpRawMdbRequest.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.RestDumpRawMdbRequest.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestDumpRawMdbRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestDumpRawMdbRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestDumpRawMdbRequest.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestDumpRawMdbRequest.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestDumpRawMdbRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestDumpRawMdbRequest.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestDumpRawMdbRequest.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
        }
    }

    public static final class RestDumpRawMdbResponse
    {
        public static final org.yamcs.protobuf.SchemaRest.RestDumpRawMdbResponse.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.RestDumpRawMdbResponse.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.RestDumpRawMdbResponse.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.RestDumpRawMdbResponse.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestDumpRawMdbResponse>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestDumpRawMdbResponse message) throws java.io.IOException
            {
                if(message.hasRawMdb())
                    output.writeByteArray(2, message.getRawMdb().toByteArray(), false);

            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestDumpRawMdbResponse message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestDumpRawMdbResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestDumpRawMdbResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestDumpRawMdbResponse> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestDumpRawMdbResponse.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestDumpRawMdbResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestDumpRawMdbResponse.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestDumpRawMdbResponse message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.RestDumpRawMdbResponse newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestDumpRawMdbResponse.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestDumpRawMdbResponse.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 2:
                            builder.setRawMdb(com.google.protobuf.ByteString.copyFrom(input.readByteArray()));
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestDumpRawMdbResponse.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.RestDumpRawMdbResponse.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.RestDumpRawMdbResponse.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestDumpRawMdbResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestDumpRawMdbResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestDumpRawMdbResponse.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestDumpRawMdbResponse.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestDumpRawMdbResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestDumpRawMdbResponse.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestDumpRawMdbResponse.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 2: return "rawMdb";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("rawMdb", 2);
        }
    }

    public static final class RestSetParameterResponse
    {
        public static final org.yamcs.protobuf.SchemaRest.RestSetParameterResponse.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.RestSetParameterResponse.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.RestSetParameterResponse.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.RestSetParameterResponse.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestSetParameterResponse>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestSetParameterResponse message) throws java.io.IOException
            {
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestSetParameterResponse message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestSetParameterResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestSetParameterResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestSetParameterResponse> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestSetParameterResponse.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestSetParameterResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestSetParameterResponse.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestSetParameterResponse message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.RestSetParameterResponse newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestSetParameterResponse.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestSetParameterResponse.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestSetParameterResponse.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.RestSetParameterResponse.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.RestSetParameterResponse.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestSetParameterResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestSetParameterResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestSetParameterResponse.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestSetParameterResponse.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestSetParameterResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestSetParameterResponse.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestSetParameterResponse.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
        }
    }

    public static final class RestGetParameterRequest
    {
        public static final org.yamcs.protobuf.SchemaRest.RestGetParameterRequest.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.RestGetParameterRequest.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.RestGetParameterRequest.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.RestGetParameterRequest.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestGetParameterRequest>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestGetParameterRequest message) throws java.io.IOException
            {
                for(org.yamcs.protobuf.Yamcs.NamedObjectId list : message.getListList())
                    output.writeObject(1, list, org.yamcs.protobuf.SchemaYamcs.NamedObjectId.WRITE, true);

                if(message.hasFromCache())
                    output.writeBool(2, message.getFromCache(), false);
                if(message.hasTimeout())
                    output.writeUInt64(3, message.getTimeout(), false);
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestGetParameterRequest message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestGetParameterRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestGetParameterRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestGetParameterRequest> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestGetParameterRequest.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestGetParameterRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestGetParameterRequest.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestGetParameterRequest message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.RestGetParameterRequest newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestGetParameterRequest.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestGetParameterRequest.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addList(input.mergeObject(org.yamcs.protobuf.Yamcs.NamedObjectId.newBuilder(), org.yamcs.protobuf.SchemaYamcs.NamedObjectId.MERGE));

                            break;
                        case 2:
                            builder.setFromCache(input.readBool());
                            break;
                        case 3:
                            builder.setTimeout(input.readUInt64());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestGetParameterRequest.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.RestGetParameterRequest.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.RestGetParameterRequest.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestGetParameterRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestGetParameterRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestGetParameterRequest.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestGetParameterRequest.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestGetParameterRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestGetParameterRequest.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestGetParameterRequest.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "list";
                case 2: return "fromCache";
                case 3: return "timeout";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("list", 1);
            fieldMap.put("fromCache", 2);
            fieldMap.put("timeout", 3);
        }
    }

    public static final class RestDumpArchiveRequest
    {
        public static final org.yamcs.protobuf.SchemaRest.RestDumpArchiveRequest.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.RestDumpArchiveRequest.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.RestDumpArchiveRequest.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.RestDumpArchiveRequest.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestDumpArchiveRequest>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestDumpArchiveRequest message) throws java.io.IOException
            {
                if(message.hasStart())
                    output.writeInt64(1, message.getStart(), false);
                if(message.hasStop())
                    output.writeInt64(2, message.getStop(), false);
                if(message.hasParameterRequest())
                    output.writeObject(3, message.getParameterRequest(), org.yamcs.protobuf.SchemaYamcs.ParameterReplayRequest.WRITE, false);

                if(message.hasPacketRequest())
                    output.writeObject(4, message.getPacketRequest(), org.yamcs.protobuf.SchemaYamcs.PacketReplayRequest.WRITE, false);

                if(message.hasEventRequest())
                    output.writeObject(5, message.getEventRequest(), org.yamcs.protobuf.SchemaYamcs.EventReplayRequest.WRITE, false);

                if(message.hasCommandHistoryRequest())
                    output.writeObject(6, message.getCommandHistoryRequest(), org.yamcs.protobuf.SchemaYamcs.CommandHistoryReplayRequest.WRITE, false);

                if(message.hasPpRequest())
                    output.writeObject(7, message.getPpRequest(), org.yamcs.protobuf.SchemaYamcs.PpReplayRequest.WRITE, false);

                if(message.hasStream())
                    output.writeBool(8, message.getStream(), false);
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestDumpArchiveRequest message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestDumpArchiveRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestDumpArchiveRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestDumpArchiveRequest> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestDumpArchiveRequest.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestDumpArchiveRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestDumpArchiveRequest.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestDumpArchiveRequest message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.RestDumpArchiveRequest newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestDumpArchiveRequest.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestDumpArchiveRequest.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setStart(input.readInt64());
                            break;
                        case 2:
                            builder.setStop(input.readInt64());
                            break;
                        case 3:
                            builder.setParameterRequest(input.mergeObject(org.yamcs.protobuf.Yamcs.ParameterReplayRequest.newBuilder(), org.yamcs.protobuf.SchemaYamcs.ParameterReplayRequest.MERGE));

                            break;
                        case 4:
                            builder.setPacketRequest(input.mergeObject(org.yamcs.protobuf.Yamcs.PacketReplayRequest.newBuilder(), org.yamcs.protobuf.SchemaYamcs.PacketReplayRequest.MERGE));

                            break;
                        case 5:
                            builder.setEventRequest(input.mergeObject(org.yamcs.protobuf.Yamcs.EventReplayRequest.newBuilder(), org.yamcs.protobuf.SchemaYamcs.EventReplayRequest.MERGE));

                            break;
                        case 6:
                            builder.setCommandHistoryRequest(input.mergeObject(org.yamcs.protobuf.Yamcs.CommandHistoryReplayRequest.newBuilder(), org.yamcs.protobuf.SchemaYamcs.CommandHistoryReplayRequest.MERGE));

                            break;
                        case 7:
                            builder.setPpRequest(input.mergeObject(org.yamcs.protobuf.Yamcs.PpReplayRequest.newBuilder(), org.yamcs.protobuf.SchemaYamcs.PpReplayRequest.MERGE));

                            break;
                        case 8:
                            builder.setStream(input.readBool());
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestDumpArchiveRequest.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.RestDumpArchiveRequest.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.RestDumpArchiveRequest.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestDumpArchiveRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestDumpArchiveRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestDumpArchiveRequest.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestDumpArchiveRequest.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestDumpArchiveRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestDumpArchiveRequest.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestDumpArchiveRequest.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "start";
                case 2: return "stop";
                case 3: return "parameterRequest";
                case 4: return "packetRequest";
                case 5: return "eventRequest";
                case 6: return "commandHistoryRequest";
                case 7: return "ppRequest";
                case 8: return "stream";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("start", 1);
            fieldMap.put("stop", 2);
            fieldMap.put("parameterRequest", 3);
            fieldMap.put("packetRequest", 4);
            fieldMap.put("eventRequest", 5);
            fieldMap.put("commandHistoryRequest", 6);
            fieldMap.put("ppRequest", 7);
            fieldMap.put("stream", 8);
        }
    }

    public static final class RestDumpArchiveResponse
    {
        public static final org.yamcs.protobuf.SchemaRest.RestDumpArchiveResponse.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.RestDumpArchiveResponse.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.RestDumpArchiveResponse.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.RestDumpArchiveResponse.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestDumpArchiveResponse>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestDumpArchiveResponse message) throws java.io.IOException
            {
                for(org.yamcs.protobuf.Pvalue.ParameterData parameterData : message.getParameterDataList())
                    output.writeObject(2, parameterData, org.yamcs.protobuf.SchemaPvalue.ParameterData.WRITE, true);

                for(org.yamcs.protobuf.Yamcs.TmPacketData packetData : message.getPacketDataList())
                    output.writeObject(3, packetData, org.yamcs.protobuf.SchemaYamcs.TmPacketData.WRITE, true);

                for(org.yamcs.protobuf.Commanding.CommandHistoryEntry command : message.getCommandList())
                    output.writeObject(4, command, org.yamcs.protobuf.SchemaCommanding.CommandHistoryEntry.WRITE, true);

                for(org.yamcs.protobuf.Yamcs.Event event : message.getEventList())
                    output.writeObject(5, event, org.yamcs.protobuf.SchemaYamcs.Event.WRITE, true);

                for(org.yamcs.protobuf.Pvalue.ParameterData ppData : message.getPpDataList())
                    output.writeObject(6, ppData, org.yamcs.protobuf.SchemaPvalue.ParameterData.WRITE, true);

            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestDumpArchiveResponse message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestDumpArchiveResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestDumpArchiveResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestDumpArchiveResponse> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestDumpArchiveResponse.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestDumpArchiveResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestDumpArchiveResponse.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestDumpArchiveResponse message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.RestDumpArchiveResponse newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestDumpArchiveResponse.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestDumpArchiveResponse.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 2:
                            builder.addParameterData(input.mergeObject(org.yamcs.protobuf.Pvalue.ParameterData.newBuilder(), org.yamcs.protobuf.SchemaPvalue.ParameterData.MERGE));

                            break;
                        case 3:
                            builder.addPacketData(input.mergeObject(org.yamcs.protobuf.Yamcs.TmPacketData.newBuilder(), org.yamcs.protobuf.SchemaYamcs.TmPacketData.MERGE));

                            break;
                        case 4:
                            builder.addCommand(input.mergeObject(org.yamcs.protobuf.Commanding.CommandHistoryEntry.newBuilder(), org.yamcs.protobuf.SchemaCommanding.CommandHistoryEntry.MERGE));

                            break;
                        case 5:
                            builder.addEvent(input.mergeObject(org.yamcs.protobuf.Yamcs.Event.newBuilder(), org.yamcs.protobuf.SchemaYamcs.Event.MERGE));

                            break;
                        case 6:
                            builder.addPpData(input.mergeObject(org.yamcs.protobuf.Pvalue.ParameterData.newBuilder(), org.yamcs.protobuf.SchemaPvalue.ParameterData.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestDumpArchiveResponse.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.RestDumpArchiveResponse.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.RestDumpArchiveResponse.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestDumpArchiveResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestDumpArchiveResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestDumpArchiveResponse.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestDumpArchiveResponse.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestDumpArchiveResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestDumpArchiveResponse.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestDumpArchiveResponse.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 2: return "parameterData";
                case 3: return "packetData";
                case 4: return "command";
                case 5: return "event";
                case 6: return "ppData";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("parameterData", 2);
            fieldMap.put("packetData", 3);
            fieldMap.put("command", 4);
            fieldMap.put("event", 5);
            fieldMap.put("ppData", 6);
        }
    }

    public static final class RestSendCommandRequest
    {
        public static final org.yamcs.protobuf.SchemaRest.RestSendCommandRequest.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.RestSendCommandRequest.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.RestSendCommandRequest.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.RestSendCommandRequest.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestSendCommandRequest>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestSendCommandRequest message) throws java.io.IOException
            {
                for(org.yamcs.protobuf.Rest.RestCommandType commands : message.getCommandsList())
                    output.writeObject(1, commands, org.yamcs.protobuf.SchemaRest.RestCommandType.WRITE, true);

            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestSendCommandRequest message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestSendCommandRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestSendCommandRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestSendCommandRequest> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestSendCommandRequest.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestSendCommandRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestSendCommandRequest.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestSendCommandRequest message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.RestSendCommandRequest newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestSendCommandRequest.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestSendCommandRequest.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.addCommands(input.mergeObject(org.yamcs.protobuf.Rest.RestCommandType.newBuilder(), org.yamcs.protobuf.SchemaRest.RestCommandType.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestSendCommandRequest.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.RestSendCommandRequest.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.RestSendCommandRequest.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestSendCommandRequest.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestSendCommandRequest.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestSendCommandRequest.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestSendCommandRequest.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestSendCommandRequest.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestSendCommandRequest.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestSendCommandRequest.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "commands";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("commands", 1);
        }
    }

    public static final class RestSendCommandResponse
    {
        public static final org.yamcs.protobuf.SchemaRest.RestSendCommandResponse.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaRest.RestSendCommandResponse.MessageSchema();
        public static final org.yamcs.protobuf.SchemaRest.RestSendCommandResponse.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaRest.RestSendCommandResponse.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestSendCommandResponse>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestSendCommandResponse message) throws java.io.IOException
            {
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestSendCommandResponse message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestSendCommandResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestSendCommandResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestSendCommandResponse> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestSendCommandResponse.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestSendCommandResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestSendCommandResponse.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestSendCommandResponse message) throws java.io.IOException {}
            public org.yamcs.protobuf.Rest.RestSendCommandResponse newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Rest.RestSendCommandResponse.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Rest.RestSendCommandResponse.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Rest.RestSendCommandResponse.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Rest.RestSendCommandResponse.Builder newMessage()
            {
                return org.yamcs.protobuf.Rest.RestSendCommandResponse.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaRest.RestSendCommandResponse.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaRest.RestSendCommandResponse.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Rest.RestSendCommandResponse.Builder> typeClass()
            {
                return org.yamcs.protobuf.Rest.RestSendCommandResponse.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Rest.RestSendCommandResponse.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Rest.RestSendCommandResponse.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Rest.RestSendCommandResponse.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
        }
    }

}
