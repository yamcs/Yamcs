// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from websocket.proto

package org.yamcs.protobuf;


public final class SchemaWebsocket
{

    public static final class WebSocketClientMessage
    {
        public static final org.yamcs.protobuf.SchemaWebsocket.WebSocketClientMessage.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaWebsocket.WebSocketClientMessage.MessageSchema();
        public static final org.yamcs.protobuf.SchemaWebsocket.WebSocketClientMessage.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaWebsocket.WebSocketClientMessage.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Websocket.WebSocketClientMessage>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Websocket.WebSocketClientMessage message) throws java.io.IOException
            {
                if(message.hasProtocolVersion())
                    output.writeUInt32(1, message.getProtocolVersion(), false);
                if(message.hasSequenceNumber())
                    output.writeUInt32(2, message.getSequenceNumber(), false);
                if(message.hasResource())
                    output.writeString(3, message.getResource(), false);
                if(message.hasOperation())
                    output.writeString(4, message.getOperation(), false);
                if(message.hasData())
                    output.writeByteArray(5, message.getData().toByteArray(), false);

            }
            public boolean isInitialized(org.yamcs.protobuf.Websocket.WebSocketClientMessage message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaWebsocket.WebSocketClientMessage.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaWebsocket.WebSocketClientMessage.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Websocket.WebSocketClientMessage> typeClass()
            {
                return org.yamcs.protobuf.Websocket.WebSocketClientMessage.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Websocket.WebSocketClientMessage.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Websocket.WebSocketClientMessage.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Websocket.WebSocketClientMessage message) throws java.io.IOException {}
            public org.yamcs.protobuf.Websocket.WebSocketClientMessage newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Websocket.WebSocketClientMessage.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Websocket.WebSocketClientMessage.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setProtocolVersion(input.readUInt32());
                            break;
                        case 2:
                            builder.setSequenceNumber(input.readUInt32());
                            break;
                        case 3:
                            builder.setResource(input.readString());
                            break;
                        case 4:
                            builder.setOperation(input.readString());
                            break;
                        case 5:
                            builder.setData(com.google.protobuf.ByteString.copyFrom(input.readByteArray()));
                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Websocket.WebSocketClientMessage.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Websocket.WebSocketClientMessage.Builder newMessage()
            {
                return org.yamcs.protobuf.Websocket.WebSocketClientMessage.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaWebsocket.WebSocketClientMessage.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaWebsocket.WebSocketClientMessage.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Websocket.WebSocketClientMessage.Builder> typeClass()
            {
                return org.yamcs.protobuf.Websocket.WebSocketClientMessage.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Websocket.WebSocketClientMessage.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Websocket.WebSocketClientMessage.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Websocket.WebSocketClientMessage.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "protocolVersion";
                case 2: return "sequenceNumber";
                case 3: return "resource";
                case 4: return "operation";
                case 5: return "data";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("protocolVersion", 1);
            fieldMap.put("sequenceNumber", 2);
            fieldMap.put("resource", 3);
            fieldMap.put("operation", 4);
            fieldMap.put("data", 5);
        }
    }

    public static final class WebSocketServerMessage
    {

        public static final class WebSocketReplyData
        {
            public static final org.yamcs.protobuf.SchemaWebsocket.WebSocketServerMessage.WebSocketReplyData.MessageSchema WRITE =
                new org.yamcs.protobuf.SchemaWebsocket.WebSocketServerMessage.WebSocketReplyData.MessageSchema();
            public static final org.yamcs.protobuf.SchemaWebsocket.WebSocketServerMessage.WebSocketReplyData.BuilderSchema MERGE =
                new org.yamcs.protobuf.SchemaWebsocket.WebSocketServerMessage.WebSocketReplyData.BuilderSchema();
            
            public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketReplyData>
            {
                public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketReplyData message) throws java.io.IOException
                {
                    if(message.hasProtocolVersion())
                        output.writeUInt32(1, message.getProtocolVersion(), false);
                    if(message.hasSequenceNumber())
                        output.writeInt32(2, message.getSequenceNumber(), false);
                }
                public boolean isInitialized(org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketReplyData message)
                {
                    return message.isInitialized();
                }
                public java.lang.String getFieldName(int number)
                {
                    return org.yamcs.protobuf.SchemaWebsocket.WebSocketServerMessage.WebSocketReplyData.getFieldName(number);
                }
                public int getFieldNumber(java.lang.String name)
                {
                    return org.yamcs.protobuf.SchemaWebsocket.WebSocketServerMessage.WebSocketReplyData.getFieldNumber(name);
                }
                public java.lang.Class<org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketReplyData> typeClass()
                {
                    return org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketReplyData.class;
                }
                public java.lang.String messageName()
                {
                    return org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketReplyData.class.getSimpleName();
                }
                public java.lang.String messageFullName()
                {
                    return org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketReplyData.class.getName();
                }
                //unused
                public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketReplyData message) throws java.io.IOException {}
                public org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketReplyData newMessage() { return null; }
            }
            public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketReplyData.Builder>
            {
                public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketReplyData.Builder builder) throws java.io.IOException
                {
                    for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                    {
                        switch(number)
                        {
                            case 0:
                                return;
                            case 1:
                                builder.setProtocolVersion(input.readUInt32());
                                break;
                            case 2:
                                builder.setSequenceNumber(input.readInt32());
                                break;
                            default:
                                input.handleUnknownField(number, this);
                        }
                    }
                }
                public boolean isInitialized(org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketReplyData.Builder builder)
                {
                    return builder.isInitialized();
                }
                public org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketReplyData.Builder newMessage()
                {
                    return org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketReplyData.newBuilder();
                }
                public java.lang.String getFieldName(int number)
                {
                    return org.yamcs.protobuf.SchemaWebsocket.WebSocketServerMessage.WebSocketReplyData.getFieldName(number);
                }
                public int getFieldNumber(java.lang.String name)
                {
                    return org.yamcs.protobuf.SchemaWebsocket.WebSocketServerMessage.WebSocketReplyData.getFieldNumber(name);
                }
                public java.lang.Class<org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketReplyData.Builder> typeClass()
                {
                    return org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketReplyData.Builder.class;
                }
                public java.lang.String messageName()
                {
                    return org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketReplyData.class.getSimpleName();
                }
                public java.lang.String messageFullName()
                {
                    return org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketReplyData.class.getName();
                }
                //unused
                public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketReplyData.Builder builder) throws java.io.IOException {}
            }
            public static java.lang.String getFieldName(int number)
            {
                switch(number)
                {
                    case 1: return "protocolVersion";
                    case 2: return "sequenceNumber";
                    default: return null;
                }
            }
            public static int getFieldNumber(java.lang.String name)
            {
                java.lang.Integer number = fieldMap.get(name);
                return number == null ? 0 : number.intValue();
            }
            private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
            static
            {
                fieldMap.put("protocolVersion", 1);
                fieldMap.put("sequenceNumber", 2);
            }
        }

        public static final class WebSocketExceptionData
        {
            public static final org.yamcs.protobuf.SchemaWebsocket.WebSocketServerMessage.WebSocketExceptionData.MessageSchema WRITE =
                new org.yamcs.protobuf.SchemaWebsocket.WebSocketServerMessage.WebSocketExceptionData.MessageSchema();
            public static final org.yamcs.protobuf.SchemaWebsocket.WebSocketServerMessage.WebSocketExceptionData.BuilderSchema MERGE =
                new org.yamcs.protobuf.SchemaWebsocket.WebSocketServerMessage.WebSocketExceptionData.BuilderSchema();
            
            public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketExceptionData>
            {
                public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketExceptionData message) throws java.io.IOException
                {
                    if(message.hasProtocolVersion())
                        output.writeUInt32(1, message.getProtocolVersion(), false);
                    if(message.hasSequenceNumber())
                        output.writeInt32(2, message.getSequenceNumber(), false);
                    if(message.hasType())
                        output.writeString(3, message.getType(), false);
                    if(message.hasMessage())
                        output.writeString(4, message.getMessage(), false);
                    if(message.hasData())
                        output.writeByteArray(5, message.getData().toByteArray(), false);

                }
                public boolean isInitialized(org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketExceptionData message)
                {
                    return message.isInitialized();
                }
                public java.lang.String getFieldName(int number)
                {
                    return org.yamcs.protobuf.SchemaWebsocket.WebSocketServerMessage.WebSocketExceptionData.getFieldName(number);
                }
                public int getFieldNumber(java.lang.String name)
                {
                    return org.yamcs.protobuf.SchemaWebsocket.WebSocketServerMessage.WebSocketExceptionData.getFieldNumber(name);
                }
                public java.lang.Class<org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketExceptionData> typeClass()
                {
                    return org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketExceptionData.class;
                }
                public java.lang.String messageName()
                {
                    return org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketExceptionData.class.getSimpleName();
                }
                public java.lang.String messageFullName()
                {
                    return org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketExceptionData.class.getName();
                }
                //unused
                public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketExceptionData message) throws java.io.IOException {}
                public org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketExceptionData newMessage() { return null; }
            }
            public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketExceptionData.Builder>
            {
                public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketExceptionData.Builder builder) throws java.io.IOException
                {
                    for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                    {
                        switch(number)
                        {
                            case 0:
                                return;
                            case 1:
                                builder.setProtocolVersion(input.readUInt32());
                                break;
                            case 2:
                                builder.setSequenceNumber(input.readInt32());
                                break;
                            case 3:
                                builder.setType(input.readString());
                                break;
                            case 4:
                                builder.setMessage(input.readString());
                                break;
                            case 5:
                                builder.setData(com.google.protobuf.ByteString.copyFrom(input.readByteArray()));
                                break;
                            default:
                                input.handleUnknownField(number, this);
                        }
                    }
                }
                public boolean isInitialized(org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketExceptionData.Builder builder)
                {
                    return builder.isInitialized();
                }
                public org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketExceptionData.Builder newMessage()
                {
                    return org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketExceptionData.newBuilder();
                }
                public java.lang.String getFieldName(int number)
                {
                    return org.yamcs.protobuf.SchemaWebsocket.WebSocketServerMessage.WebSocketExceptionData.getFieldName(number);
                }
                public int getFieldNumber(java.lang.String name)
                {
                    return org.yamcs.protobuf.SchemaWebsocket.WebSocketServerMessage.WebSocketExceptionData.getFieldNumber(name);
                }
                public java.lang.Class<org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketExceptionData.Builder> typeClass()
                {
                    return org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketExceptionData.Builder.class;
                }
                public java.lang.String messageName()
                {
                    return org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketExceptionData.class.getSimpleName();
                }
                public java.lang.String messageFullName()
                {
                    return org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketExceptionData.class.getName();
                }
                //unused
                public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketExceptionData.Builder builder) throws java.io.IOException {}
            }
            public static java.lang.String getFieldName(int number)
            {
                switch(number)
                {
                    case 1: return "protocolVersion";
                    case 2: return "sequenceNumber";
                    case 3: return "type";
                    case 4: return "message";
                    case 5: return "data";
                    default: return null;
                }
            }
            public static int getFieldNumber(java.lang.String name)
            {
                java.lang.Integer number = fieldMap.get(name);
                return number == null ? 0 : number.intValue();
            }
            private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
            static
            {
                fieldMap.put("protocolVersion", 1);
                fieldMap.put("sequenceNumber", 2);
                fieldMap.put("type", 3);
                fieldMap.put("message", 4);
                fieldMap.put("data", 5);
            }
        }

        public static final class WebSocketSubscriptionData
        {
            public static final org.yamcs.protobuf.SchemaWebsocket.WebSocketServerMessage.WebSocketSubscriptionData.MessageSchema WRITE =
                new org.yamcs.protobuf.SchemaWebsocket.WebSocketServerMessage.WebSocketSubscriptionData.MessageSchema();
            public static final org.yamcs.protobuf.SchemaWebsocket.WebSocketServerMessage.WebSocketSubscriptionData.BuilderSchema MERGE =
                new org.yamcs.protobuf.SchemaWebsocket.WebSocketServerMessage.WebSocketSubscriptionData.BuilderSchema();
            
            public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketSubscriptionData>
            {
                public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketSubscriptionData message) throws java.io.IOException
                {
                    if(message.hasSequenceNumber())
                        output.writeUInt32(1, message.getSequenceNumber(), false);
                    if(message.hasType())
                        output.writeEnum(2, message.getType().getNumber(), false);
                    if(message.hasParameterData())
                        output.writeObject(3, message.getParameterData(), org.yamcs.protobuf.SchemaPvalue.ParameterData.WRITE, false);

                    if(message.hasCommand())
                        output.writeObject(4, message.getCommand(), org.yamcs.protobuf.SchemaCommanding.CommandHistoryEntry.WRITE, false);

                }
                public boolean isInitialized(org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketSubscriptionData message)
                {
                    return message.isInitialized();
                }
                public java.lang.String getFieldName(int number)
                {
                    return org.yamcs.protobuf.SchemaWebsocket.WebSocketServerMessage.WebSocketSubscriptionData.getFieldName(number);
                }
                public int getFieldNumber(java.lang.String name)
                {
                    return org.yamcs.protobuf.SchemaWebsocket.WebSocketServerMessage.WebSocketSubscriptionData.getFieldNumber(name);
                }
                public java.lang.Class<org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketSubscriptionData> typeClass()
                {
                    return org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketSubscriptionData.class;
                }
                public java.lang.String messageName()
                {
                    return org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketSubscriptionData.class.getSimpleName();
                }
                public java.lang.String messageFullName()
                {
                    return org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketSubscriptionData.class.getName();
                }
                //unused
                public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketSubscriptionData message) throws java.io.IOException {}
                public org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketSubscriptionData newMessage() { return null; }
            }
            public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketSubscriptionData.Builder>
            {
                public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketSubscriptionData.Builder builder) throws java.io.IOException
                {
                    for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                    {
                        switch(number)
                        {
                            case 0:
                                return;
                            case 1:
                                builder.setSequenceNumber(input.readUInt32());
                                break;
                            case 2:
                                builder.setType(org.yamcs.protobuf.Yamcs.ProtoDataType.valueOf(input.readEnum()));
                                break;
                            case 3:
                                builder.setParameterData(input.mergeObject(org.yamcs.protobuf.Pvalue.ParameterData.newBuilder(), org.yamcs.protobuf.SchemaPvalue.ParameterData.MERGE));

                                break;
                            case 4:
                                builder.setCommand(input.mergeObject(org.yamcs.protobuf.Commanding.CommandHistoryEntry.newBuilder(), org.yamcs.protobuf.SchemaCommanding.CommandHistoryEntry.MERGE));

                                break;
                            default:
                                input.handleUnknownField(number, this);
                        }
                    }
                }
                public boolean isInitialized(org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketSubscriptionData.Builder builder)
                {
                    return builder.isInitialized();
                }
                public org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketSubscriptionData.Builder newMessage()
                {
                    return org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketSubscriptionData.newBuilder();
                }
                public java.lang.String getFieldName(int number)
                {
                    return org.yamcs.protobuf.SchemaWebsocket.WebSocketServerMessage.WebSocketSubscriptionData.getFieldName(number);
                }
                public int getFieldNumber(java.lang.String name)
                {
                    return org.yamcs.protobuf.SchemaWebsocket.WebSocketServerMessage.WebSocketSubscriptionData.getFieldNumber(name);
                }
                public java.lang.Class<org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketSubscriptionData.Builder> typeClass()
                {
                    return org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketSubscriptionData.Builder.class;
                }
                public java.lang.String messageName()
                {
                    return org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketSubscriptionData.class.getSimpleName();
                }
                public java.lang.String messageFullName()
                {
                    return org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketSubscriptionData.class.getName();
                }
                //unused
                public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketSubscriptionData.Builder builder) throws java.io.IOException {}
            }
            public static java.lang.String getFieldName(int number)
            {
                switch(number)
                {
                    case 1: return "sequenceNumber";
                    case 2: return "type";
                    case 3: return "parameterData";
                    case 4: return "command";
                    default: return null;
                }
            }
            public static int getFieldNumber(java.lang.String name)
            {
                java.lang.Integer number = fieldMap.get(name);
                return number == null ? 0 : number.intValue();
            }
            private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
            static
            {
                fieldMap.put("sequenceNumber", 1);
                fieldMap.put("type", 2);
                fieldMap.put("parameterData", 3);
                fieldMap.put("command", 4);
            }
        }

        public static final org.yamcs.protobuf.SchemaWebsocket.WebSocketServerMessage.MessageSchema WRITE =
            new org.yamcs.protobuf.SchemaWebsocket.WebSocketServerMessage.MessageSchema();
        public static final org.yamcs.protobuf.SchemaWebsocket.WebSocketServerMessage.BuilderSchema MERGE =
            new org.yamcs.protobuf.SchemaWebsocket.WebSocketServerMessage.BuilderSchema();
        
        public static class MessageSchema implements io.protostuff.Schema<org.yamcs.protobuf.Websocket.WebSocketServerMessage>
        {
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Websocket.WebSocketServerMessage message) throws java.io.IOException
            {
                if(message.hasType())
                    output.writeEnum(1, message.getType().getNumber(), false);
                if(message.hasReply())
                    output.writeObject(2, message.getReply(), org.yamcs.protobuf.SchemaWebsocket.WebSocketServerMessage.WebSocketReplyData.WRITE, false);

                if(message.hasException())
                    output.writeObject(3, message.getException(), org.yamcs.protobuf.SchemaWebsocket.WebSocketServerMessage.WebSocketExceptionData.WRITE, false);

                if(message.hasData())
                    output.writeObject(4, message.getData(), org.yamcs.protobuf.SchemaWebsocket.WebSocketServerMessage.WebSocketSubscriptionData.WRITE, false);

            }
            public boolean isInitialized(org.yamcs.protobuf.Websocket.WebSocketServerMessage message)
            {
                return message.isInitialized();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaWebsocket.WebSocketServerMessage.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaWebsocket.WebSocketServerMessage.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Websocket.WebSocketServerMessage> typeClass()
            {
                return org.yamcs.protobuf.Websocket.WebSocketServerMessage.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Websocket.WebSocketServerMessage.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Websocket.WebSocketServerMessage.class.getName();
            }
            //unused
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Websocket.WebSocketServerMessage message) throws java.io.IOException {}
            public org.yamcs.protobuf.Websocket.WebSocketServerMessage newMessage() { return null; }
        }
        public static class BuilderSchema implements io.protostuff.Schema<org.yamcs.protobuf.Websocket.WebSocketServerMessage.Builder>
        {
            public void mergeFrom(io.protostuff.Input input, org.yamcs.protobuf.Websocket.WebSocketServerMessage.Builder builder) throws java.io.IOException
            {
                for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
                {
                    switch(number)
                    {
                        case 0:
                            return;
                        case 1:
                            builder.setType(org.yamcs.protobuf.Websocket.WebSocketServerMessage.MessageType.valueOf(input.readEnum()));
                            break;
                        case 2:
                            builder.setReply(input.mergeObject(org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketReplyData.newBuilder(), org.yamcs.protobuf.SchemaWebsocket.WebSocketServerMessage.WebSocketReplyData.MERGE));

                            break;
                        case 3:
                            builder.setException(input.mergeObject(org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketExceptionData.newBuilder(), org.yamcs.protobuf.SchemaWebsocket.WebSocketServerMessage.WebSocketExceptionData.MERGE));

                            break;
                        case 4:
                            builder.setData(input.mergeObject(org.yamcs.protobuf.Websocket.WebSocketServerMessage.WebSocketSubscriptionData.newBuilder(), org.yamcs.protobuf.SchemaWebsocket.WebSocketServerMessage.WebSocketSubscriptionData.MERGE));

                            break;
                        default:
                            input.handleUnknownField(number, this);
                    }
                }
            }
            public boolean isInitialized(org.yamcs.protobuf.Websocket.WebSocketServerMessage.Builder builder)
            {
                return builder.isInitialized();
            }
            public org.yamcs.protobuf.Websocket.WebSocketServerMessage.Builder newMessage()
            {
                return org.yamcs.protobuf.Websocket.WebSocketServerMessage.newBuilder();
            }
            public java.lang.String getFieldName(int number)
            {
                return org.yamcs.protobuf.SchemaWebsocket.WebSocketServerMessage.getFieldName(number);
            }
            public int getFieldNumber(java.lang.String name)
            {
                return org.yamcs.protobuf.SchemaWebsocket.WebSocketServerMessage.getFieldNumber(name);
            }
            public java.lang.Class<org.yamcs.protobuf.Websocket.WebSocketServerMessage.Builder> typeClass()
            {
                return org.yamcs.protobuf.Websocket.WebSocketServerMessage.Builder.class;
            }
            public java.lang.String messageName()
            {
                return org.yamcs.protobuf.Websocket.WebSocketServerMessage.class.getSimpleName();
            }
            public java.lang.String messageFullName()
            {
                return org.yamcs.protobuf.Websocket.WebSocketServerMessage.class.getName();
            }
            //unused
            public void writeTo(io.protostuff.Output output, org.yamcs.protobuf.Websocket.WebSocketServerMessage.Builder builder) throws java.io.IOException {}
        }
        public static java.lang.String getFieldName(int number)
        {
            switch(number)
            {
                case 1: return "type";
                case 2: return "reply";
                case 3: return "exception";
                case 4: return "data";
                default: return null;
            }
        }
        public static int getFieldNumber(java.lang.String name)
        {
            java.lang.Integer number = fieldMap.get(name);
            return number == null ? 0 : number.intValue();
        }
        private static final java.util.HashMap<java.lang.String,java.lang.Integer> fieldMap = new java.util.HashMap<java.lang.String,java.lang.Integer>();
        static
        {
            fieldMap.put("type", 1);
            fieldMap.put("reply", 2);
            fieldMap.put("exception", 3);
            fieldMap.put("data", 4);
        }
    }

}
